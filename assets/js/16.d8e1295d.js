(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{181:function(t,a,e){"use strict";e.r(a);var r=e(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"_3d变形"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3d变形","aria-hidden":"true"}},[t._v("#")]),t._v(" 3D变形")]),t._v(" "),e("p",[t._v("相比2D变换，主要多了景深和灭点")]),t._v(" "),e("h2",{attrs:{id:"缩放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缩放","aria-hidden":"true"}},[t._v("#")]),t._v(" 缩放")]),t._v(" "),e("ol",[e("li",[t._v("和2D缩放使用相同也是使用 transform：scale（2）；放大两倍")])]),t._v(" "),e("h2",{attrs:{id:"旋转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#旋转","aria-hidden":"true"}},[t._v("#")]),t._v(" 旋转")]),t._v(" "),e("ol",[e("li",[t._v("rotateX 围绕X轴旋转")]),t._v(" "),e("li",[t._v("rotateY 围绕Y轴旋转")]),t._v(" "),e("li",[t._v("rotateZ 围绕Z轴旋转")]),t._v(" "),e("li",[t._v("rotate3d(x,y,z,旋转度数){ 例如：rotate3d(1,0,0,360deg) }")])]),t._v(" "),e("h2",{attrs:{id:"平移"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#平移","aria-hidden":"true"}},[t._v("#")]),t._v(" 平移")]),t._v(" "),e("ol",[e("li",[t._v("translateX 沿着X轴平移")]),t._v(" "),e("li",[t._v("translateY 沿着Y轴平移")]),t._v(" "),e("li",[t._v("translateZ 沿着Z轴平移")]),t._v(" "),e("li",[t._v("translate3d(x,y,z) 先沿着X轴平移，再沿着Y轴平移 再沿着Z轴平移")])]),t._v(" "),e("h2",{attrs:{id:"景深"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#景深","aria-hidden":"true"}},[t._v("#")]),t._v(" 景深")]),t._v(" "),e("h3",{attrs:{id:"灭点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#灭点","aria-hidden":"true"}},[t._v("#")]),t._v(" 灭点")]),t._v(" "),e("ol",[e("li",[t._v("了解景深之前，首先要了解灭点：指的是立体图形各个条变的延伸线产生的相交点。透视点的消失点")])]),t._v(" "),e("h3",{attrs:{id:"景深-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#景深-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 景深")]),t._v(" "),e("ol",[e("li",[t._v("景深:(perspective)\n"),e("ul",[e("li",[t._v("简单理解，景深就是我们肉眼距离显示器的距离，景深越大，元素离我们越远效果就不好，在CSS中，perspective用于激活一个3D空间，属性值就是景深的大小（默认值none）")]),t._v(" "),e("li",[t._v("transform:perspective(100px)作用于本身、而且组合使用perspective(100px)必须放在最前面 例如：transform:perspective(100px) rotate(360deg)")]),t._v(" "),e("li",[t._v("perspective：100px  作用于子元素（最常用法，作用于包裹器上，子元素有作用）")])])]),t._v(" "),e("li",[t._v("景深的原理\n"),e("ul",[e("li",[t._v("景深越大 灭点越远，元素变形越小")]),t._v(" "),e("li",[t._v("景深越小，灭点越近，元素变形越大")])])]),t._v(" "),e("li",[t._v("景深基点：\n"),e("ul",[e("li",[t._v("就是我们视角的位置")]),t._v(" "),e("li",[t._v("有两个控制属性：\n"),e("ul",[e("li",[t._v("perspective控制z轴")]),t._v(" "),e("li",[t._v("perspective-origin控制X轴：50%，50%；(默认值，参照盒子模型)")])])])])])]),t._v(" "),e("h2",{attrs:{id:"transform-style"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transform-style","aria-hidden":"true"}},[t._v("#")]),t._v(" transform-style")]),t._v(" "),e("ol",[e("li",[t._v("transform-style：preserve-3d\n"),e("ul",[e("li",[t._v("制造有层级的3d舞台，是一个不可继承的属性，作用于自己的直接子元素")])])]),t._v(" "),e("li",[t._v("景深叠加\n"),e("ul",[e("li",[t._v("一定要避免景深叠加的情况")]),t._v(" "),e("li",[t._v("什么是景深叠加：包裹器有景深，包裹器的包裹器还有景深那么作用到子元素时就会产生叠加的情况，这个叠加是没有规则的")])])])]),t._v(" "),e("h2",{attrs:{id:"backface-visibility"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#backface-visibility","aria-hidden":"true"}},[t._v("#")]),t._v(" backface-visibility")]),t._v(" "),e("ol",[e("li",[t._v("backface-visibility 属性是用来设置是否显示元素背面，默认是显示的（调透明度是可以看到的）\n"),e("ul",[e("li",[t._v("hidden 不显示背面")]),t._v(" "),e("li",[t._v("visible （默认值）显示")])])])])])}],!1,null,null,null);a.default=i.exports}}]);