{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/ES6/10-set和map.md?vue&type=template&id=aff7de3a&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/ES6/10-set和map.md","mtime":1557493316063},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"set-和-map-数据结构\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#set-和-map-数据结构\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Set 和 Map 数据结构\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"set\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#set\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Set\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"基本用法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基本用法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 基本用法\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"ES6 提供了一种新的数据结构---Set，类似于数组，但是成员值都是唯一的，没有重复。Set 本身就是一个构造函数，用来生成 Set 数据结构\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" s \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"forEach\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"x\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" s\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"add\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"x\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 通过 add 方法添加\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" i \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"of\")]),_vm._v(\" s\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 2,3,4,5\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"s\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"//使用结构赋值方法，将s对成数组\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// [2,3,4,5]\")]),_vm._v(\"\\n\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"s\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"size\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 使用size 获取 s 内value的个数\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br')])]),_c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"应用一：去除重复成员\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js{} line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"// [...new Set(array)]\\nconst a = new Set([2,2,3,3,3,4,4]);\\nlet c = [...a];// [2,3,4]\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('ol',{attrs:{\"start\":\"3\"}},[_c('li',[_vm._v(\"向Set 中添加值时不会发生数据转换，Set 判断NaN等于自身，精确等于运算符（===）认为NaN不等于本身。Set 内部判断两个值是否是相同时使用的算法叫做\\\"Same-value equality\\\",\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"set实例的属性和方法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#set实例的属性和方法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Set实例的属性和方法\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Set 实例方法分为两大类：操作方法（用于操作数据）和遍历方法（用于遍历成员），下面先说说4个操作方法：\\n\"),_c('ul',[_c('li',[_vm._v(\"add（value）：添加某个值，返回Set 结构本身。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"delete（value）：删除某个值，返回一个布尔值，表示删除成功与否\")]),_vm._v(\" \"),_c('li',[_vm._v(\"has（value）：返回一个布尔值，表示参数是否为Set成员\")]),_vm._v(\" \"),_c('li',[_vm._v(\"clear（）：清除所有成员，没有返回值\")])])])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"遍历操作\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#遍历操作\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 遍历操作\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Set 结构的实例有4个便利方法：\\n\"),_c('ul',[_c('li',[_vm._v(\"keys():返回键名的遍历器。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"values(): 返回键值得遍历器\")]),_vm._v(\" \"),_c('li',[_vm._v(\"entries(): 返回键值对的遍历器（就是键名和键值为一对）\")]),_vm._v(\" \"),_c('li',[_vm._v(\"forEach(): 使用回调函数遍历每个成员。\")])])]),_vm._v(\" \"),_c('li',[_vm._v(\"由于 Set 结构没有键名，只有键值（可以说键名和键值是一样的），所以keys 方法和 values 方法遍历的完全一致。\"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'red'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'pink'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'blue'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" item \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"of\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"keys\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"item\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// red pink blue\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" item \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"of\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"values\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"item\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// red pink blue\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" item \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"of\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"entries\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"item\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// ['red','red'] ['pink','pink'] ['blue','blue']\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br')])])])]),_vm._v(\" \"),_c('p',[_vm._v(\"Set 结构实例默认都是可以遍历的，遍历器生成的函数就是它的 values 方法，这就意味着我们可以省略而使用 for...of 方法进行循环遍历 Set。\\n3. forEach()\\n+ 可以使 forEach 对 Set 进行一些操作\\n\"),_c('code',[_vm._v(\"js let set = new set([1,2,3,4]); set.forEach((value) =>{console.log(value*2)}); // 2 4 6 8\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"遍历器的应用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#遍历器的应用\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 遍历器的应用\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"首先可以利用扩展运算符和 set 结构给数组去重\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" arr \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"5\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" unique \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"new \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"arr\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"unique\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// [3,5,4,6]\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br')])]),_c('ol',{attrs:{\"start\":\"2\"}},[_c('li',[_vm._v(\"实现交集，并集，差集\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" b \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"4\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 交集\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" union \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"union\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// {1,2,3,4}\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 并集 两个都有的\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" inter \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"filter\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"x\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"has\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"x\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"inter\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// {2, 3}\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 差集，这里就是找a中 b没有的\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" dif \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Set\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"...\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"filter\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token parameter\"}},[_vm._v(\"x\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"!\")]),_vm._v(\"b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"has\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"x\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"map\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#map\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Map\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"含义和基本用法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#含义和基本用法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 含义和基本用法\")]),_vm._v(\" \"),_c('p',[_vm._v(\"JavaScript 的对象 本质上是键值对的集合（Hash结构），只能用字符串作为键，那ES6 提供了Mao数据结构，他也是键值对的集合，但是它的'键'是各种数据类型的值，就是说 Object 结构是\\\"字符串-值\\\"，而Map 是\\\"值-值\\\"，是一种更加完善的Hash结构。\")])])}]\n\nexport { render, staticRenderFns }"]}