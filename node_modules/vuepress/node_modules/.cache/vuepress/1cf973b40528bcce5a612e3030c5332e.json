{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/ES6/扩展运算符（...）.md?vue&type=template&id=bbc82260&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/ES6/扩展运算符（...）.md","mtime":1557211807743},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"扩展运算符\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#扩展运算符\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 扩展运算符\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"扩展运算符在对象中的使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#扩展运算符在对象中的使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 扩展运算符在对象中的使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [_c(\"li\", [_vm._v(\"运用扩展运算符合并并添加数组\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"const favorites = {\\n    color: ['yellow','blue'],\\n    fruits: ['banana','mongo']\\n};\\n// 将 favorites中的 fruits数组扩展到 shoppingList 中\\nconst shoppingList = ['milk','sweets',...favorites.fruits];\\nconsole.log(shoppingList);\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"打印的结果为 ：['milk' ,'sweets' ,'banana' ,'mongo']\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"扩展运算符的实例使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#扩展运算符的实例使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 扩展运算符的实例使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\n            \"要求：todos 中 id为2 的已经完成我们需要将它进行删除并反回新的数组\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \" const todos = [\\n        {id: 1,name:'Go to store', completed: false},\\n        {id: 2,name:'Watch TV', completed: true},\\n        {id: 3,name:'Go Shopping', completed: false}\\n    ]\\n    \\n    // 我们给一个索引为2\\n    const id = 2 ;\\n    // 利用数组的 findIndex()方法返回数组中满足提供的测试函数的第一个元素的索引\\n    const todoIndex = todos.findIndex(todo => todo.id === id);\\n    // 利用 slice() 提取原数组中的对象，得到一个新的数组，\\n    //然后利用扩展运算符来扩展成为一个新的数组，\\n    const  newTodos = [...todos.slice(0,todoIndex), ...todos.slice(todoIndex+1)];\\n    console.log(newTodos);\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"扩展运算符在函数中的使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#扩展运算符在函数中的使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 扩展运算符在函数中的使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"在函数中的实例1\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#在函数中的实例1\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 在函数中的实例1\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"要求：将newFruit 数组中的元素添加到 fruit 中，这里将使用扩展运算符代替了 apply方法\\napply的写法\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language- extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n              _c(\"code\", [\n                _vm._v(\n                  \"const fruit = ['apple','bananas','pear'];\\nconst newFruit = ['orange','mongo'];\\nArray.push.apply(fruit,newFruit)\\n\"\n                )\n              ])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"使用扩展运算符的写法\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language- extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n              _c(\"code\", [\n                _vm._v(\n                  \"const fruit = ['apple','bananas','pear'];\\nconst newFruit = ['orange','mongo'];\\nfruit.push(...newFruit);// 简单明了，就是向fruit数组中添加元素\\n\"\n                )\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"在函数中的实例2\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#在函数中的实例2\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 在函数中的实例2\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"要求：将带有时间的数组中的元素作为 Date 的参数传入\"),\n          _c(\"div\", { staticClass: \"language- extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n              _c(\"code\", [\n                _vm._v(\n                  \"const dateFields = [2019, 4, 24];\\nconst date = new Date(...dateFields);\\nconsole.log(date);\\n\"\n                )\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}