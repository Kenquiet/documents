{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/ES6/1-let和const 命令.md?vue&type=template&id=6aecde75&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/ES6/1-let和const 命令.md","mtime":1557406294445},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"let-和-const-命令\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#let-和-const-命令\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" let 和 const 命令\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"let-命令\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#let-命令\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" let 命令\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"基本用法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基本用法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 基本用法\")]),_vm._v(\" \"),_c('p',[_vm._v(\"ES6 新增了 let 命令，用于声明变量。用法和 var 类似，但是 let 声明只在代码块内有效，也就是let 有会计作用域，这就很好的解决了 for 循环计数器的问题\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('div',{staticClass:\"highlight-lines\"},[_c('br'),_c('br'),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"highlighted\"},[_vm._v(\" \")]),_c('br'),_c('br')]),_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"for\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" i \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"0\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"<\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" i\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"++\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_vm._v(\"i\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n       console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"i\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 这里不再是 10， 而是输出6\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\na\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"[\")]),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"6\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"]\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 6\")]),_vm._v(\"\\n\")])]),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('p',[_vm._v(\"上面的代码中，使用了 let 之后 for循环就拥有了块级作用域，每一次输出i都会返回一个i，而且每一个 i 只在当次循环有效，所以每一次循环的 i 其实都是一个新的变量\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"不存在变量提升\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#不存在变量提升\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 不存在变量提升\")]),_vm._v(\" \"),_c('p',[_vm._v(\"var 命令会发生\\\"变量提升\\\" 现象，即变量在声明之前使用，值为 undefined。为了更加的符合逻辑，\"),_c('strong',[_vm._v(\"let 命令改变了语法，必须在声明之后才可以使用，否则会报错\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// var 情况\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 输出值为 undefined\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"2\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// let 情况\")]),_vm._v(\"\\nconsole\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"b\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 报错\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" b \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"3\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"暂时性死区\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#暂时性死区\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 暂时性死区\")]),_vm._v(\" \"),_c('p',[_vm._v(\"只要在块级作用域内存在 let 或者 const 命令，那么这个区域的变量不再受外部影响，\\n总之在代码块内，使用了let 命令声明变量之前，该变量都是不可以使用的，语法上这称为\\\"暂时性死区\\\"。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"123\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"if\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token boolean\"}},[_vm._v(\"true\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'abc'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    console\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 报错\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"不允许重复声明\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#不允许重复声明\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 不允许重复声明\")]),_vm._v(\" \"),_c('p',[_vm._v(\"let 不允许在同一个作用域内重复声明同一个变量。\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-js line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-js\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 重复声明报错\")]),_vm._v(\"\\n \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"c\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"10\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" a \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token number\"}},[_vm._v(\"1\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"块级作用域\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#块级作用域\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 块级作用域\")]),_vm._v(\" \"),_c('p',[_vm._v(\"ES5 只有全局作用域和函数作用域，没有块级作用域，这样有些地方很麻烦。\\n例如-数据泄露：\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-js{} line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"// 使用 var 情况\\nvar  s = 'hello';\\nfor (var i=0; i<s.length; i++ ){\\n    console.log(s[i]);\\n}\\nconsole.log(i);//5  这里我们并没有定义i，但是for循环中将 i=5 最终泄露出来了。\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('p',[_vm._v(\"let 实际上为 JavaScript 新增了块级作用域\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-js{} line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"// 使用 let 情况\\n for (let i=0; i<3; i++){\\n     let a = i+1;\\n     console.log(a);\\n }\\n console.log(i);// 没有定义 i 所以报错 \\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br')])]),_c('h3',{attrs:{\"id\":\"块级作用域与函数声明\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#块级作用域与函数声明\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 块级作用域与函数声明\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"ES5 不允许在块级作用域中声明函数。\")]),_vm._v(\" \"),_c('li',[_vm._v(\"ES6\\n\"),_c('ul',[_c('li',[_vm._v(\"允许块级作用域内声明函数；\")]),_vm._v(\" \"),_c('li',[_vm._v(\"函数声明雷类似于 var，会提升到全局作用域或者函数作用域头部\")]),_vm._v(\" \"),_c('li',[_vm._v(\"同时，函数声明还会提升到所在的会计作用域的头部\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"tip custom-block\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"TIP\")]),_vm._v(\" \"),_c('p',[_vm._v(\"考虑到环境导致的行为差异过大，应该避免在块级作用域内声明函数，如有需要，则该写成函数表达式的形式，而不是函数声明语句。\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-js{} line-numbers-mode\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"// 函数声明语句\\n{\\n    let a = 'hello';\\n    function f() {\\n        return a;\\n    }\\n}\\n// 函数表达式\\n{\\n    let b = 'secret';\\n    let f2 = function（）{\\n        return b;\\n    }\\n}\\n\")])]),_vm._v(\" \"),_c('div',{staticClass:\"line-numbers-wrapper\"},[_c('span',{staticClass:\"line-number\"},[_vm._v(\"1\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"2\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"3\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"4\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"5\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"6\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"7\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"8\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"9\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"10\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"11\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"12\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"13\")]),_c('br'),_c('span',{staticClass:\"line-number\"},[_vm._v(\"14\")]),_c('br')])]),_c('h2',{attrs:{\"id\":\"const-命令\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#const-命令\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" const 命令\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"基本用法-2\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#基本用法-2\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 基本用法\")]),_vm._v(\" \"),_c('p',[_vm._v(\"const 声明一个只读常量，一旦声明，值就不能改变\"),_c('br'),_vm._v(\"\\nconst 一旦声明，就必须初始化，不能留到后面赋值\"),_c('br'),_vm._v(\"\\nconst 的作用域与 let 命令相同，只在声明所在的块级作用域有效\"),_c('br'),_vm._v(\"\\nconst 命令声明的畅想也不会提升，同样存在暂时性死区，也只能在声明后使用，不可重复声明\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"本质\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#本质\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 本质\")]),_vm._v(\" \"),_c('p',[_vm._v(\"const 从本质上说其实就是一个指针，声明的变量指向那个内存地址，值就保存在这个地址中，而const只能保证这个指针是固定的，至于指向的数据结构是不是可变，const 无法控制。\")])])}]\n\nexport { render, staticRenderFns }"]}