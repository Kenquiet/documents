{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/ES6/异步操作.md?vue&type=template&id=378a1564&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/ES6/异步操作.md","mtime":1557211807733},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"异步操作\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#异步操作\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 异步操作\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"异步操作的四种方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#异步操作的四种方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 异步操作的四种方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"回调\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"promise\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"generator\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"async 搭配 await (ES7)在这里先不讲后面单独讲对比，代替generator 搭配 yield\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"回调地狱的写法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#回调地狱的写法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 回调地狱的写法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"一层嵌套一层，层层嵌套\"),\n          _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n              _c(\"code\", [\n                _vm._v(\" $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" xxx\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"success\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"data1\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n     $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n     url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" xxx\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n     dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n     \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"success\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"data2\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n         $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n         url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" xxx\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n         dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n         \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"success\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"data3\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n            \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 完事了\")\n                ]),\n                _vm._v(\"\\n         \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n         \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"error\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n         \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'错了~~'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n         \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n         \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \\n     \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n     \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"error\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n     \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'错了~~'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n     \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n     \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \\n \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\"\\n \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"error\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'错了~~'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \\n\")\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"promise-的写法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#promise-的写法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Promise 的写法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"```javascript\\nPromise.all([\\n    $.ajax({url: xxx ,dataType: 'json'}),\\n    $.ajax({url: xxx ,dataType: 'json'}),\\n    $.ajax({url: xxx ,dataType: 'json'})\\n]).then(results =>{\\n    // 完事了\\n}, err=>{\\n    alert('错了')\\n})\\n```\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"generator-的写法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#generator-的写法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" generator 的写法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"```javascript\\nrunner (function *() {\\n  let data1 = yield $.ajax({url: xxx ,dataType: 'json'});\\n  let data2 = yield $.ajax({url: xxx ,dataType: 'json'});\\n  let data3 = yield $.ajax({url: xxx ,dataType: 'json'})\\n})\\n```\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\n            \"从上面 可以看出 promise 和 generator 差别不大。但是带逻辑的就可以显示出 generator 的优势\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"带逻辑的 promise 比较麻烦\"),\n          _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n              _c(\"code\", [\n                _vm._v(\"promise\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"all\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _vm._v(\"\\n    $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getUserData'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"then\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"results\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" userData \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" results\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                  _vm._v(\"0\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"if\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"userData\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _vm._v(\"type \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"==\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'VIP'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n        promise\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"all\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _vm._v(\"\\n            $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getVIPItems'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n        \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"then\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"results\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n            \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" items \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" results\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                  _vm._v(\"0\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n            \\n            \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 读取到数据之后，接下来就是 生成列表， 显示......\")\n                ]),\n                _vm._v(\"\\n        \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"err\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n            \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'404'\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"+\")\n                ]),\n                _vm._v(\" err\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n        \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"else\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n         promise\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"all\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _vm._v(\"\\n                    $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getItems'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n                \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"then\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"results\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n                    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" items \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" results\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"[\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n                  _vm._v(\"0\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"]\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n                    \\n                    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 读取到数据之后，接下来就是 生成列表， 显示......\")\n                ]),\n                _vm._v(\"\\n                \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"err\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n                    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"err\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n                \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token parameter\" } }, [\n                  _vm._v(\"err\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=>\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n    \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"alert\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'错了~~'\")\n                ]),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"+\")\n                ]),\n                _vm._v(\" err\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"带逻辑的 generator 比较简单\"),\n          _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n              _c(\"code\", [\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"runner\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"function\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"*\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n  \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" userData \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"yield\")\n                ]),\n                _vm._v(\" $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getUserData'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n  \\n  \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"if\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _vm._v(\"userData\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _vm._v(\"type \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"==\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'VIP'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n      \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" items \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"yield\")\n                ]),\n                _vm._v(\" $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getVIPItems'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n  \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"else\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"\\n      \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" items \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"yield\")\n                ]),\n                _vm._v(\" $\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"ajax\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"{\")]\n                ),\n                _vm._v(\"url\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'getItems'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\",\")]\n                ),\n                _vm._v(\" dataType\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\":\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'json'\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n  \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _vm._v(\"\\n  \\n  \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 读取到数据之后，接下来就是 生成列表， 显示......\")\n                ]),\n                _vm._v(\"\\n\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"}\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Promise 比较适合 一次读一堆\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"generator 比较合适 在读取数据时 带有逻辑性\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}