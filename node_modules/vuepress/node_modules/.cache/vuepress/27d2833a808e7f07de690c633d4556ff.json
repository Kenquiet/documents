{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/ES6/异步操作.md?vue&type=template&id=378a1564&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/ES6/异步操作.md","mtime":1557211807733},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"异步操作\"><a class=\"header-anchor\" href=\"#异步操作\" aria-hidden=\"true\">#</a> 异步操作</h1>\n<h2 id=\"异步操作的四种方法\"><a class=\"header-anchor\" href=\"#异步操作的四种方法\" aria-hidden=\"true\">#</a> 异步操作的四种方法</h2>\n<ol>\n<li>回调</li>\n<li>promise</li>\n<li>generator</li>\n<li>async 搭配 await (ES7)在这里先不讲后面单独讲对比，代替generator 搭配 yield</li>\n</ol>\n<h2 id=\"回调地狱的写法\"><a class=\"header-anchor\" href=\"#回调地狱的写法\" aria-hidden=\"true\">#</a> 回调地狱的写法</h2>\n<ol>\n<li>一层嵌套一层，层层嵌套<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n url<span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">,</span>\n dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span>\n <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n     url<span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">,</span>\n     dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n         url<span class=\"token punctuation\">:</span> xxx<span class=\"token punctuation\">,</span>\n         dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 完事了</span>\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n         <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         <span class=\"token function\">alert</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'错了~~'</span><span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">}</span>\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token function\">alert</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'错了~~'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token function\">alert</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'错了~~'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n</code></pre>\n<!--beforeend--></div><!--afterend--></li>\n</ol>\n<h2 id=\"promise-的写法\"><a class=\"header-anchor\" href=\"#promise-的写法\" aria-hidden=\"true\">#</a> Promise 的写法</h2>\n<pre><code>```javascript\nPromise.all([\n    $.ajax({url: xxx ,dataType: 'json'}),\n    $.ajax({url: xxx ,dataType: 'json'}),\n    $.ajax({url: xxx ,dataType: 'json'})\n]).then(results =&gt;{\n    // 完事了\n}, err=&gt;{\n    alert('错了')\n})\n```\n</code></pre>\n<h2 id=\"generator-的写法\"><a class=\"header-anchor\" href=\"#generator-的写法\" aria-hidden=\"true\">#</a> generator 的写法</h2>\n<pre><code>```javascript\nrunner (function *() {\n  let data1 = yield $.ajax({url: xxx ,dataType: 'json'});\n  let data2 = yield $.ajax({url: xxx ,dataType: 'json'});\n  let data3 = yield $.ajax({url: xxx ,dataType: 'json'})\n})\n```\n</code></pre>\n<ol>\n<li>从上面 可以看出 promise 和 generator 差别不大。但是带逻辑的就可以显示出 generator 的优势</li>\n<li>带逻辑的 promise 比较麻烦<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getUserData'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> userData <span class=\"token operator\">=</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'VIP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getVIPItems'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token comment\">// 读取到数据之后，接下来就是 生成列表， 显示......</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'404'</span><span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n         promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getItems'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    \n                    <span class=\"token comment\">// 读取到数据之后，接下来就是 生成列表， 显示......</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'错了~~'</span><span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></li>\n<li>带逻辑的 generator 比较简单<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">runner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> userData <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getUserData'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userData<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'VIP'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getVIPItems'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">:</span><span class=\"token string\">'getItems'</span><span class=\"token punctuation\">,</span> dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// 读取到数据之后，接下来就是 生成列表， 显示......</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></li>\n<li>Promise 比较适合 一次读一堆</li>\n<li>generator 比较合适 在读取数据时 带有逻辑性</li>\n</ol>\n</div>\n",null]}