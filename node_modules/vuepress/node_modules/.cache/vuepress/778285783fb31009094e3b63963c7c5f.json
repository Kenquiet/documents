{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/css3/6-3D变形.md?vue&type=template&id=18b3a33c&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/css3/6-3D变形.md","mtime":1557719053404},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"_3d变形\"><a class=\"header-anchor\" href=\"#_3d变形\" aria-hidden=\"true\">#</a> 3D变形</h1>\n<p>相比2D变换，主要多了景深和灭点</p>\n<h2 id=\"缩放\"><a class=\"header-anchor\" href=\"#缩放\" aria-hidden=\"true\">#</a> 缩放</h2>\n<ol>\n<li>和2D缩放使用相同也是使用 transform：scale（2）；放大两倍</li>\n</ol>\n<h2 id=\"旋转\"><a class=\"header-anchor\" href=\"#旋转\" aria-hidden=\"true\">#</a> 旋转</h2>\n<ol>\n<li>rotateX 围绕X轴旋转</li>\n<li>rotateY 围绕Y轴旋转</li>\n<li>rotateZ 围绕Z轴旋转</li>\n<li>rotate3d(x,y,z,旋转度数){ 例如：rotate3d(1,0,0,360deg) }</li>\n</ol>\n<h2 id=\"平移\"><a class=\"header-anchor\" href=\"#平移\" aria-hidden=\"true\">#</a> 平移</h2>\n<ol>\n<li>translateX 沿着X轴平移</li>\n<li>translateY 沿着Y轴平移</li>\n<li>translateZ 沿着Z轴平移</li>\n<li>translate3d(x,y,z) 先沿着X轴平移，再沿着Y轴平移 再沿着Z轴平移</li>\n</ol>\n<h2 id=\"景深\"><a class=\"header-anchor\" href=\"#景深\" aria-hidden=\"true\">#</a> 景深</h2>\n<h3 id=\"灭点\"><a class=\"header-anchor\" href=\"#灭点\" aria-hidden=\"true\">#</a> 灭点</h3>\n<ol>\n<li>了解景深之前，首先要了解灭点：指的是立体图形各个条变的延伸线产生的相交点。透视点的消失点</li>\n</ol>\n<h3 id=\"景深-2\"><a class=\"header-anchor\" href=\"#景深-2\" aria-hidden=\"true\">#</a> 景深</h3>\n<ol>\n<li>景深:(perspective)\n<ul>\n<li>简单理解，景深就是我们肉眼距离显示器的距离，景深越大，元素离我们越远效果就不好，在CSS中，perspective用于激活一个3D空间，属性值就是景深的大小（默认值none）</li>\n<li>transform:perspective(100px)作用于本身、而且组合使用perspective(100px)必须放在最前面 例如：transform:perspective(100px) rotate(360deg)</li>\n<li>perspective：100px  作用于子元素（最常用法，作用于包裹器上，子元素有作用）</li>\n</ul>\n</li>\n<li>景深的原理\n<ul>\n<li>景深越大 灭点越远，元素变形越小</li>\n<li>景深越小，灭点越近，元素变形越大</li>\n</ul>\n</li>\n<li>景深基点：\n<ul>\n<li>就是我们视角的位置</li>\n<li>有两个控制属性：\n<ul>\n<li>perspective控制z轴</li>\n<li>perspective-origin控制X轴：50%，50%；(默认值，参照盒子模型)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"transform-style\"><a class=\"header-anchor\" href=\"#transform-style\" aria-hidden=\"true\">#</a> transform-style</h2>\n<ol>\n<li>transform-style：preserve-3d\n<ul>\n<li>制造有层级的3d舞台，是一个不可继承的属性，作用于自己的直接子元素</li>\n</ul>\n</li>\n<li>景深叠加\n<ul>\n<li>一定要避免景深叠加的情况</li>\n<li>什么是景深叠加：包裹器有景深，包裹器的包裹器还有景深那么作用到子元素时就会产生叠加的情况，这个叠加是没有规则的</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"backface-visibility\"><a class=\"header-anchor\" href=\"#backface-visibility\" aria-hidden=\"true\">#</a> backface-visibility</h2>\n<ol>\n<li>backface-visibility 属性是用来设置是否显示元素背面，默认是显示的（调透明度是可以看到的）\n<ul>\n<li>hidden 不显示背面</li>\n<li>visible （默认值）显示</li>\n</ul>\n</li>\n</ol>\n</div>\n",null]}