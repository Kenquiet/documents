{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/css3/1-选择器.md?vue&type=template&id=79f72682&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/css3/1-选择器.md","mtime":1557628064113},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"选择器\\\"><a href=\\\"#选择器\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 选择器</h1> <h2 id=\\\"选择器的分类\\\"><a href=\\\"#选择器的分类\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 选择器的分类</h2> <ol><li>通配符选择器 （*）</li> <li>id 选择器 （#）</li> <li>类选择器 （.）</li> <li>元素选择器 （元素本身）</li> <li>后代选择器 （空格）</li> <li>分组（结合符）选择器（，）</li> <li>子元素选择器（&gt;）----直接后代选择器</li> <li>相邻兄弟选择器（+）----紧跟着的兄弟元素</li> <li>通用兄弟选择器（~）---- 条件：必须跟在一个元素后面，且有一个共同的父元素</li></ol> <h2 id=\\\"属性选择器\\\"><a href=\\\"#属性选择器\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 属性选择器</h2> <ol><li>存在和值选择器（[]）不常用\\n<ul><li>[attr]：匹配指定属性</li> <li>[attr='value']：完全匹配指定属性值</li> <li>[attr ~='value']：表示带有attr命名的属性的元素，并且该属性是一个以空格作为分隔的值列表</li></ul></li> <li>子串值属性选择器\\n<ul><li>[attr |= &quot;value&quot; ]：属性以value-开头或者value的元素</li> <li>[attr ^= &quot;value&quot;]：以value开头的</li> <li>[attr $= &quot;value&quot;]：以value结尾的</li> <li>[attr *= &quot;value&quot;]：只要有value就行.</li></ul></li></ol> <h2 id=\\\"伪类和伪类选择器\\\"><a href=\\\"#伪类和伪类选择器\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 伪类和伪类选择器</h2> <h3 id=\\\"链接伪类\\\"><a href=\\\"#链接伪类\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 链接伪类</h3> <ol><li>链接伪类 -- 只能作用于链接元素来用如 a 链接\\n<ul><li>:link\\t表示作为超链接，并指向一个未访问的地址所有锚</li> <li>:visited\\t表示作为超链接，并指向一个已访问的地址所有锚，\\n<ul><li>隐私与：visited 只有 color,background-color,border-color 等这三个属性才能被应用到已访问的链接</li></ul></li> <li>:target\\t代表一个特殊的元素，它的id是URI的片段标识符</li></ul></li></ol> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">TIP</p> <p>URI: 统一资源标识符。分三种，\\n第一：绝对URI，例如：http://xx/xxx/xxx。\\n第二：标识符，这种URI以&quot;#某某&quot;结束，某某是指一个anchor标志符（称为片段标志符），协议://域名/目录/文件#片段标示符（例如：/a/b.php#a）\\n第三：相对URI。如本机的资源 /xx/xx/xx</p></div> <h3 id=\\\"动态伪类\\\"><a href=\\\"#动态伪类\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 动态伪类</h3> <ol><li>动态伪类可以运用到所有元素\\n<ul><li>:hover --\\t表示悬浮到元素上</li> <li>:active -- 表示匹配被用户激活的元素（点击按住时）</li></ul></li> <li>CSS定义超链接需要注意先后顺序，否则，在某些浏览器里可能会出现某个样式不起作用的bug\\n<ul><li>正确的排列顺序是：L-V-H-A，L-V-H-A是link、visited、hover、active的简写。</li></ul></li></ol> <h3 id=\\\"表单伪类\\\"><a href=\\\"#表单伪类\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 表单伪类</h3> <ol><li>:enabled -- 匹配可编辑的表单</li> <li>:disable -- 匹配被禁用的表单</li> <li>:checked -- 匹配被选中的表单</li> <li>:focus   -- 匹配获取焦点的表单</li></ol> <h3 id=\\\"结构性伪类\\\"><a href=\\\"#结构性伪类\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 结构性伪类</h3> <ol><li><p>ele:nth-child(index)\\t表示匹配第 index 的子元素，这个子元素必须是ele</p></li> <li><p>ele:nth-of-type(index) 表示匹配第 index 个 ele子元素</p></li></ol> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">TIP</p> <p>:nth-child(index)和 :nth-of-type(index)的坑: nth-of-type以元素为中心</p></div> <h3 id=\\\"伪类选择器\\\"><a href=\\\"#伪类选择器\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 伪类选择器</h3> <ol><li>:not -- 排除 不选</li></ol> <div class=\\\"language-css line-numbers-mode\\\"><pre class=\\\"language-css\\\"><code><span class=\\\"token comment\\\">/* 让最后一个 a 元素没有右边框 */</span>\\n<span class=\\\"token selector\\\">div&gt;a:not(last-of-type)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">border-right</span> <span class=\\\"token punctuation\\\">:</span> none<span class=\\\"token punctuation\\\">}</span>\\n</code></pre> <div class=\\\"line-numbers-wrapper\\\"><span class=\\\"line-number\\\">1</span><br><span class=\\\"line-number\\\">2</span><br></div></div><ol start=\\\"2\\\"><li>:after 选择器在被选元素的内容后面插入内容</li> <li>:before 选择器在被选元素的内容前面插入内容</li></ol> <div class=\\\"tip custom-block\\\"><p class=\\\"custom-block-title\\\">TIP</p> <p>:after 和 :before  都不要忘记使用 content:'' ;开启伪类或者指定内容</p></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}