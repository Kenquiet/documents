{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/jQuery/6-动画.md?vue&type=template&id=d6306610&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/jQuery/6-动画.md","mtime":1556957453000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h2 id=\"动画\"><a class=\"header-anchor\" href=\"#动画\" aria-hidden=\"true\">#</a> 动画</h2>\n<ol>\n<li>show（显示） 和 hide（隐藏）\n<ul>\n<li>可以传第一参数 speed：动画持续的时间单位为ms</li>\n<li>可以传第二参数 回调函数callback：可传可不传</li>\n<li>最常用的什么都不传，让其显示隐藏</li>\n</ul>\n</li>\n<li>滑入：slideDown，滑出：slideUp 切换：slideToggle\n<ul>\n<li>第一参数speed ，不传参数默认值为 normal(400ms)</li>\n<li>第二参数 callback 回调函数，可传可不传</li>\n</ul>\n</li>\n<li>淡入：fadeIn，淡出：fadeOut，切换：fadeToggle\n<ul>\n<li>第一参数speed ，不传参数默认值为 normal(400ms)</li>\n<li>第二参数 callback 回调函数，可传可不传</li>\n</ul>\n</li>\n<li>自定义动画：animate（只有第一个参数是必须填的）\n<ul>\n<li>参数1：对象，里面可以传一些需要动画的样式</li>\n<li>参数2：speed 动画的执行时间</li>\n<li>参数3: 动画执行的效果：默认值是 swing</li>\n<li>参数4：回调函数(可用可不用)</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>#box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>left<span class=\"token punctuation\">:</span><span class=\"token number\">800</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"linear\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行完了\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--></li>\n<li>stop() 停止动画行为，一定在动画前面加，解决动画执行完再执行下一个动画问题，经典案例就是菜单问题。<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>#box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>left<span class=\"token punctuation\">:</span><span class=\"token number\">800</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--></li>\n</ol>\n<h2 id=\"节点操作\"><a class=\"header-anchor\" href=\"#节点操作\" aria-hidden=\"true\">#</a> 节点操作</h2>\n<h3 id=\"创建节点\"><a class=\"header-anchor\" href=\"#创建节点\" aria-hidden=\"true\">#</a> 创建节点</h3>\n<ol>\n<li>直接使用 $()来创建节点</li>\n</ol>\n<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">//创建a节点</span>\n <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;a href=\"\" target=\"\"> 链接 &lt;/a>'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--><h3 id=\"添加节点-append-和-appendto\"><a class=\"header-anchor\" href=\"#添加节点-append-和-appendto\" aria-hidden=\"true\">#</a> 添加节点 append 和 appendTo</h3>\n<ol>\n<li>append 在节点中添加子节点</li>\n<li>appendTo 将某节点添加都某节点中</li>\n<li>也可以添加一个字符串<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;a href=\"\" target=\"\"> 链接 &lt;/a>'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br></div><!--beforeend--></div><!--afterend--></li>\n<li>appendTo 比较常用，我们可以将所有的标签操作完成之后，然后添加到某节点中<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">// 在div 中添加 p标签</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 将 p标签添加到 div 中</span>\n<span class=\"token comment\">// 这个方法比较常用，将p 标签所有操作都完成后，然后再 appendTo 到div中</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendTo</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div><!--beforeend--></div><!--afterend--></li>\n</ol>\n<h2 id=\"清空节点与删除节点\"><a class=\"header-anchor\" href=\"#清空节点与删除节点\" aria-hidden=\"true\">#</a> 清空节点与删除节点</h2>\n<h3 id=\"清空节点：empty-与-html-区别\"><a class=\"header-anchor\" href=\"#清空节点：empty-与-html-区别\" aria-hidden=\"true\">#</a> 清空节点：empty() 与 html() 区别</h3>\n<ol>\n<li>empty() 只用这个，不会发生内存泄漏，也就是将标签清空连带标签上面的事件也清空</li>\n<li>html() 只清空标签，不删除标签上的事件<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">// 需求：将div中的所有标签清空</span>\n<span class=\"token comment\">// empty 杀它的孩子</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--></li>\n</ol>\n<h3 id=\"删除节点：remove\"><a class=\"header-anchor\" href=\"#删除节点：remove\" aria-hidden=\"true\">#</a> 删除节点：remove()</h3>\n<ol>\n<li>remove() 将标签删除，自杀<!--beforebegin--><div class=\"language-javascript line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">// 将div标签删除</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div><!--beforeend--></div><!--afterend--></li>\n</ol>\n</div>\n",null]}