{"remainingRequest":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/kenquietwei/Desktop/documents/docs/QT/ES6/10-set和map.md?vue&type=template&id=f3e6ab80&","dependencies":[{"path":"/Users/kenquietwei/Desktop/documents/docs/QT/ES6/10-set和map.md","mtime":1557408029347},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kenquietwei/Desktop/documents/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"set-和-map-数据结构\"><a class=\"header-anchor\" href=\"#set-和-map-数据结构\" aria-hidden=\"true\">#</a> Set 和 Map 数据结构</h1>\n<h2 id=\"set\"><a class=\"header-anchor\" href=\"#set\" aria-hidden=\"true\">#</a> Set</h2>\n<h3 id=\"基本用法\"><a class=\"header-anchor\" href=\"#基本用法\" aria-hidden=\"true\">#</a> 基本用法</h3>\n<ol>\n<li>ES6 提供了一种新的数据结构---Set，类似于数组，但是成员值都是唯一的，没有重复。Set 本身就是一个构造函数，用来生成 Set 数据结构</li>\n</ol>\n<!--beforebegin--><div class=\"language-js line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 通过 add 方法添加</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">of</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 2,3,4,5</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//使用结构赋值方法，将s对成数组</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// [2,3,4,5]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用size 获取 s 内value的个数</span>\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"2\">\n<li>应用一：去除重复成员</li>\n</ol>\n<!--beforebegin--><div class=\"language-js{} line-numbers-mode\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>// [...new Set(array)]\nconst a = new Set([2,2,3,3,3,4,4]);\nlet c = [...a];// [2,3,4]\n</code></pre>\n<div class=\"line-numbers-wrapper\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div><!--beforeend--></div><!--afterend--><ol start=\"3\">\n<li>向Set 中添加值时不会发生数据转换，Set 判断NaN等于自身，精确等于运算符（===）认为NaN不等于本身。Set 内部判断两个值是否是相同时使用的算法叫做&quot;Same-value equality&quot;,</li>\n</ol>\n<h3 id=\"set实例的属性和方法\"><a class=\"header-anchor\" href=\"#set实例的属性和方法\" aria-hidden=\"true\">#</a> Set实例的属性和方法</h3>\n</div>\n",null]}